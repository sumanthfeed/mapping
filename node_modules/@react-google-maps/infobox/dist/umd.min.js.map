{"version":3,"file":"umd.min.js","sources":["../src/InfoBox.tsx"],"sourcesContent":["/* global google */\n/* eslint-disable filenames/match-regex */\nimport { InfoBoxOptions } from './types'\n\nexport class InfoBox {\n  content: string | Node\n  disableAutoPan: boolean\n  maxWidth: number\n  pixelOffset: google.maps.Size\n  position: google.maps.LatLng\n  zIndex: number | undefined | null\n  boxClass: string\n  boxStyle: {\n    [key: string]: any\n  }\n  closeBoxMargin: string\n  closeBoxURL: string\n  infoBoxClearance: google.maps.Size\n  isHidden: boolean\n  alignBottom: boolean\n  pane: string\n  enableEventPropagation: boolean\n  div: HTMLDivElement | null\n  closeListener: google.maps.MapsEventListener | null\n  moveListener: google.maps.MapsEventListener | null\n  mapListener: google.maps.MapsEventListener | null\n  contextListener: google.maps.MapsEventListener | null\n  eventListeners: google.maps.MapsEventListener[] | null\n  fixedWidthSet: boolean | null\n\n  constructor(options: InfoBoxOptions = {}) {\n    this.extend(InfoBox, google.maps.OverlayView)\n\n    // Standard options (in common with google.maps.InfoWindow):\n    this.content = options.content || ''\n    this.disableAutoPan = options.disableAutoPan || false\n    this.maxWidth = options.maxWidth || 0\n    this.pixelOffset = options.pixelOffset || new google.maps.Size(0, 0)\n    this.position = options.position || new google.maps.LatLng(0, 0)\n    this.zIndex = options.zIndex || null\n\n    // Additional options (unique to InfoBox):\n    this.boxClass = options.boxClass || 'infoBox'\n    this.boxStyle = options.boxStyle || {}\n    this.closeBoxMargin = options.closeBoxMargin || '2px'\n    this.closeBoxURL = options.closeBoxURL || 'http://www.google.com/intl/en_us/mapfiles/close.gif'\n    if (options.closeBoxURL === '') {\n      this.closeBoxURL = ''\n    }\n    this.infoBoxClearance = options.infoBoxClearance || new google.maps.Size(1, 1)\n\n    if (typeof options.visible === 'undefined') {\n      if (typeof options.isHidden === 'undefined') {\n        options.visible = true\n      } else {\n        options.visible = !options.isHidden\n      }\n    }\n    this.isHidden = !options.visible\n\n    this.alignBottom = options.alignBottom || false\n    this.pane = options.pane || 'floatPane'\n    this.enableEventPropagation = options.enableEventPropagation || false\n\n    this.div = null\n    this.closeListener = null\n    this.moveListener = null\n    this.mapListener = null\n    this.contextListener = null\n    this.eventListeners = null\n    this.fixedWidthSet = null\n  }\n\n  createInfoBoxDiv(): void {\n    // This handler prevents an event in the InfoBox from being passed on to the map.\n    function cancelHandler(event: Event) {\n      event.cancelBubble = true\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n    }\n\n    // This handler ignores the current event in the InfoBox and conditionally prevents\n    // the event from being passed on to the map. It is used for the contextmenu event.\n    const ignoreHandler = (event: Event) => {\n      event.returnValue = false\n\n      if (event.preventDefault) {\n        event.preventDefault()\n      }\n\n      if (!this.enableEventPropagation) {\n        cancelHandler(event)\n      }\n    }\n\n    if (!this.div) {\n      this.div = document.createElement('div')\n      this.setBoxStyle()\n\n      if (typeof this.content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + this.content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(this.content)\n      }\n\n      // @ts-ignore\n      const panes = this.getPanes()\n      panes[this.pane].appendChild(this.div) // Add the InfoBox div to the DOM\n\n      this.addClickHandler()\n\n      if (this.div.style.width) {\n        this.fixedWidthSet = true\n      } else {\n        if (this.maxWidth !== 0 && this.div.offsetWidth > this.maxWidth) {\n          this.div.style.width = this.maxWidth + 'px'\n          this.fixedWidthSet = true\n        } else {\n          // The following code is needed to overcome problems with MSIE\n          const bw = this.getBoxWidths()\n          this.div.style.width = this.div.offsetWidth - bw.left - bw.right + 'px'\n          this.fixedWidthSet = false\n        }\n      }\n\n      this.panBox(this.disableAutoPan)\n\n      if (!this.enableEventPropagation) {\n        this.eventListeners = []\n\n        // Cancel event propagation.\n        // Note: mousemove not included (to resolve Issue 152)\n        const events = [\n          'mousedown',\n          'mouseover',\n          'mouseout',\n          'mouseup',\n          'click',\n          'dblclick',\n          'touchstart',\n          'touchend',\n          'touchmove',\n        ]\n\n        for (let i = 0; i < events.length; i++) {\n          this.eventListeners.push(\n            google.maps.event.addDomListener(this.div, events[i], cancelHandler)\n          )\n        }\n\n        // Workaround for Google bug that causes the cursor to change to a pointer\n        // when the mouse moves over a marker underneath InfoBox.\n        this.eventListeners.push(\n          google.maps.event.addDomListener(\n            this.div,\n            'mouseover',\n            () => {\n              if (this.div) {\n                this.div.style.cursor = 'default'\n              }\n            }\n          )\n        )\n      }\n\n      this.contextListener = google.maps.event.addDomListener(\n        this.div,\n        'contextmenu',\n        ignoreHandler\n      )\n\n      /**\n       * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\n       * @name InfoBox#domready\n       * @event\n       */\n      google.maps.event.trigger(this, 'domready')\n    }\n  }\n\n  getCloseBoxImg(): string {\n    let img = ''\n\n    if (this.closeBoxURL !== '') {\n      img = '<img alt=\"\"'\n      img += ' aria-hidden=\"true\"'\n      img += \" src='\" + this.closeBoxURL + \"'\"\n      img += ' align=right' // Do this because Opera chokes on style='float: right;'\n      img += \" style='\"\n      img += ' position: relative;' // Required by MSIE\n      img += ' cursor: pointer;'\n      img += ' margin: ' + this.closeBoxMargin + ';'\n      img += \"'>\"\n    }\n\n    return img\n  }\n\n  addClickHandler(): void {\n    if (this.div && this.div.firstChild && this.closeBoxURL !== '') {\n      const closeBox = this.div.firstChild\n      this.closeListener = google.maps.event.addDomListener(\n        closeBox,\n        'click',\n        this.getCloseClickHandler()\n      )\n    } else {\n      this.closeListener = null\n    }\n  }\n\n  getCloseClickHandler() {\n    return (event: Event) => {\n      // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n      event.cancelBubble = true\n\n      if (event.stopPropagation) {\n        event.stopPropagation()\n      }\n\n      /**\n       * This event is fired when the InfoBox's close box is clicked.\n       * @name InfoBox#closeclick\n       * @event\n       */\n      google.maps.event.trigger(this, 'closeclick')\n\n      this.close()\n    }\n  }\n\n  panBox(disablePan?: boolean): void {\n    if (this.div && !disablePan) {\n      // @ts-ignore\n      const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n\n      // Only pan if attached to map, not panorama\n      if (map instanceof google.maps.Map) {\n        let xOffset = 0\n        let yOffset = 0\n\n        const bounds = map.getBounds()\n        if (bounds && !bounds.contains(this.position)) {\n          // Marker not in visible area of map, so set center\n          // of map to the marker position first.\n          map.setCenter(this.position)\n        }\n\n        const mapDiv = map.getDiv()\n        // @ts-ignore\n        const mapWidth = mapDiv.offsetWidth\n        // @ts-ignore\n        const mapHeight = mapDiv.offsetHeight\n        const iwOffsetX = this.pixelOffset.width\n        const iwOffsetY = this.pixelOffset.height\n        const iwWidth = this.div.offsetWidth\n        const iwHeight = this.div.offsetHeight\n        const padX = this.infoBoxClearance.width\n        const padY = this.infoBoxClearance.height\n\n        // @ts-ignore\n        const projection: google.maps.MapCanvasProjection = this.getProjection()\n        const pixPosition = projection.fromLatLngToContainerPixel(this.position)\n\n        if (pixPosition !== null) {\n          if (pixPosition.x < -iwOffsetX + padX) {\n            xOffset = pixPosition.x + iwOffsetX - padX\n          } else if (pixPosition.x + iwWidth + iwOffsetX + padX > mapWidth) {\n            xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth\n          }\n\n          if (this.alignBottom) {\n            if (pixPosition.y < -iwOffsetY + padY + iwHeight) {\n              yOffset = pixPosition.y + iwOffsetY - padY - iwHeight\n            } else if (pixPosition.y + iwOffsetY + padY > mapHeight) {\n              yOffset = pixPosition.y + iwOffsetY + padY - mapHeight\n            }\n          } else {\n            if (pixPosition.y < -iwOffsetY + padY) {\n              yOffset = pixPosition.y + iwOffsetY - padY\n            } else if (pixPosition.y + iwHeight + iwOffsetY + padY > mapHeight) {\n              yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight\n            }\n          }\n        }\n\n        if (!(xOffset === 0 && yOffset === 0)) {\n          // Move the map to the shifted center.\n          map.panBy(xOffset, yOffset)\n        }\n      }\n    }\n  }\n\n  setBoxStyle(): void {\n    if (this.div) {\n      // Apply style values from the style sheet defined in the boxClass parameter:\n      this.div.className = this.boxClass\n\n      // Clear existing inline style values:\n      this.div.style.cssText = ''\n\n      // Apply style values defined in the boxStyle parameter:\n      const boxStyle = this.boxStyle\n      for (const i in boxStyle) {\n        if (boxStyle.hasOwnProperty(i)) {\n          // @ts-ignore\n          this.div.style[i] = boxStyle[i]\n        }\n      }\n\n      // Fix for iOS disappearing InfoBox problem\n      // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n      this.div.style.webkitTransform = 'translateZ(0)'\n\n      // Fix up opacity style for benefit of MSIE\n      if (typeof this.div.style.opacity !== 'undefined' && this.div.style.opacity !== '') {\n        // See http://www.quirksmode.org/css/opacity.html\n        const opacity = parseFloat(this.div.style.opacity || '')\n\n        // @ts-ignore\n        this.div.style.msFilter =\n          '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + opacity * 100 + ')\"'\n        this.div.style.filter = 'alpha(opacity=' + opacity * 100 + ')'\n      }\n\n      // Apply required styles\n      this.div.style.position = 'absolute'\n      this.div.style.visibility = 'hidden'\n      if (this.zIndex !== null) {\n        this.div.style.zIndex = this.zIndex + ''\n      }\n      if (!this.div.style.overflow) {\n        this.div.style.overflow = 'auto'\n      }\n    }\n  }\n\n  getBoxWidths(): { bottom: number; left: number; right: number; top: number } {\n    const bw = { top: 0, bottom: 0, left: 0, right: 0 }\n\n    if (!this.div) {\n      return bw\n    }\n\n    if (document.defaultView) {\n      const ownerDocument = this.div.ownerDocument\n      const computedStyle =\n        ownerDocument && ownerDocument.defaultView\n          ? ownerDocument.defaultView.getComputedStyle(this.div, '')\n          : null\n\n      if (computedStyle) {\n        // The computed styles are always in pixel units (good!)\n        bw.top = parseInt(computedStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(computedStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(computedStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(computedStyle.borderRightWidth || '', 10) || 0\n      }\n    } else if (\n      // @ts-ignore\n      document.documentElement.currentStyle // MSIE\n    ) {\n      // @ts-ignore\n      const currentStyle = this.div.currentStyle\n\n      if (currentStyle) {\n        // The current styles may not be in pixel units, but assume they are (bad!)\n        bw.top = parseInt(currentStyle.borderTopWidth || '', 10) || 0\n        bw.bottom = parseInt(currentStyle.borderBottomWidth || '', 10) || 0\n        bw.left = parseInt(currentStyle.borderLeftWidth || '', 10) || 0\n        bw.right = parseInt(currentStyle.borderRightWidth || '', 10) || 0\n      }\n    }\n\n    return bw\n  }\n\n  onRemove(): void {\n    if (this.div && this.div.parentNode) {\n      this.div.parentNode.removeChild(this.div)\n      this.div = null\n    }\n  }\n\n  draw(): void {\n    this.createInfoBoxDiv()\n\n    if (this.div) {\n      // @ts-ignore\n      const projection: google.maps.MapCanvasProjection = this.getProjection()\n      const pixPosition = projection.fromLatLngToDivPixel(this.position)\n\n      if (pixPosition !== null) {\n        this.div.style.left = pixPosition.x + this.pixelOffset.width + 'px'\n\n        if (this.alignBottom) {\n          this.div.style.bottom = -(pixPosition.y + this.pixelOffset.height) + 'px'\n        } else {\n          this.div.style.top = pixPosition.y + this.pixelOffset.height + 'px'\n        }\n      }\n\n      if (this.isHidden) {\n        this.div.style.visibility = 'hidden'\n      } else {\n        this.div.style.visibility = 'visible'\n      }\n    }\n  }\n\n  setOptions(options: InfoBoxOptions = {}): void {\n    if (typeof options.boxClass !== 'undefined') {\n      // Must be first\n      this.boxClass = options.boxClass\n      this.setBoxStyle()\n    }\n    if (typeof options.boxStyle !== 'undefined') {\n      // Must be second\n      this.boxStyle = options.boxStyle\n      this.setBoxStyle()\n    }\n    if (typeof options.content !== 'undefined') {\n      this.setContent(options.content)\n    }\n    if (typeof options.disableAutoPan !== 'undefined') {\n      this.disableAutoPan = options.disableAutoPan\n    }\n    if (typeof options.maxWidth !== 'undefined') {\n      this.maxWidth = options.maxWidth\n    }\n    if (typeof options.pixelOffset !== 'undefined') {\n      this.pixelOffset = options.pixelOffset\n    }\n    if (typeof options.alignBottom !== 'undefined') {\n      this.alignBottom = options.alignBottom\n    }\n    if (typeof options.position !== 'undefined') {\n      this.setPosition(options.position)\n    }\n    if (typeof options.zIndex !== 'undefined') {\n      this.setZIndex(options.zIndex)\n    }\n    if (typeof options.closeBoxMargin !== 'undefined') {\n      this.closeBoxMargin = options.closeBoxMargin\n    }\n    if (typeof options.closeBoxURL !== 'undefined') {\n      this.closeBoxURL = options.closeBoxURL\n    }\n    if (typeof options.infoBoxClearance !== 'undefined') {\n      this.infoBoxClearance = options.infoBoxClearance\n    }\n    if (typeof options.isHidden !== 'undefined') {\n      this.isHidden = options.isHidden\n    }\n    if (typeof options.visible !== 'undefined') {\n      this.isHidden = !options.visible\n    }\n    if (typeof options.enableEventPropagation !== 'undefined') {\n      this.enableEventPropagation = options.enableEventPropagation\n    }\n\n    if (this.div) {\n      this.draw()\n    }\n  }\n\n  setContent(content: string | Node): void {\n    this.content = content\n\n    if (this.div) {\n      if (this.closeListener) {\n        google.maps.event.removeListener(this.closeListener)\n        this.closeListener = null\n      }\n\n      // Odd code required to make things work with MSIE.\n      if (!this.fixedWidthSet) {\n        this.div.style.width = ''\n      }\n\n      if (typeof content === 'string') {\n        this.div.innerHTML = this.getCloseBoxImg() + content\n      } else {\n        this.div.innerHTML = this.getCloseBoxImg()\n        this.div.appendChild(content)\n      }\n\n      // Perverse code required to make things work with MSIE.\n      // (Ensures the close box does, in fact, float to the right.)\n      if (!this.fixedWidthSet) {\n        this.div.style.width = this.div.offsetWidth + 'px'\n        if (typeof content === 'string') {\n          this.div.innerHTML = this.getCloseBoxImg() + content\n        } else {\n          this.div.innerHTML = this.getCloseBoxImg()\n          this.div.appendChild(content)\n        }\n      }\n\n      this.addClickHandler()\n    }\n\n    /**\n     * This event is fired when the content of the InfoBox changes.\n     * @name InfoBox#content_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'content_changed')\n  }\n\n  setPosition(latLng: google.maps.LatLng): void {\n    this.position = latLng\n\n    if (this.div) {\n      this.draw()\n    }\n\n    /**\n     * This event is fired when the position of the InfoBox changes.\n     * @name InfoBox#position_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'position_changed')\n  }\n\n  setVisible(isVisible: boolean): void {\n    this.isHidden = !isVisible\n    if (this.div) {\n      this.div.style.visibility = this.isHidden ? 'hidden' : 'visible'\n    }\n  }\n\n  setZIndex(index: number): void {\n    this.zIndex = index\n\n    if (this.div) {\n      this.div.style.zIndex = index + ''\n    }\n\n    /**\n     * This event is fired when the zIndex of the InfoBox changes.\n     * @name InfoBox#zindex_changed\n     * @event\n     */\n    google.maps.event.trigger(this, 'zindex_changed')\n  }\n\n  getContent(): string | Node {\n    return this.content\n  }\n\n  getPosition(): google.maps.LatLng {\n    return this.position\n  }\n\n  getZIndex(): number | null | undefined {\n    return this.zIndex\n  }\n\n  getVisible(): boolean {\n    // @ts-ignore\n    const map: google.maps.Map | google.maps.StreetViewPanorama | null | undefined = this.getMap()\n    let isVisible\n\n    if (typeof map === 'undefined' || map === null) {\n      isVisible = false\n    } else {\n      isVisible = !this.isHidden\n    }\n\n    return isVisible\n  }\n\n  show(): void {\n    this.isHidden = false\n    if (this.div) {\n      this.div.style.visibility = 'visible'\n    }\n  }\n\n  hide(): void {\n    this.isHidden = true\n    if (this.div) {\n      this.div.style.visibility = 'hidden'\n    }\n  }\n\n  open(\n    map: google.maps.Map | google.maps.StreetViewPanorama,\n    anchor?: google.maps.MVCObject\n  ): void {\n    if (anchor) {\n      // @ts-ignore\n      this.position = anchor.getPosition()\n      this.moveListener = google.maps.event.addListener(\n        anchor,\n        'position_changed',\n        () => {\n          // @ts-ignore\n          const position = anchor.getPosition()\n          this.setPosition(position)\n        }\n      )\n\n      this.mapListener = google.maps.event.addListener(\n        anchor,\n        'map_changed',\n        () => {\n          // @ts-ignore\n          this.setMap(anchor.map)\n        }\n      )\n    }\n\n    // @ts-ignore\n    this.setMap(map)\n\n    if (this.div) {\n      this.panBox()\n    }\n  }\n\n  close() {\n    if (this.closeListener) {\n      google.maps.event.removeListener(this.closeListener)\n      this.closeListener = null\n    }\n\n    if (this.eventListeners) {\n      for (let i = 0; i < this.eventListeners.length; i++) {\n        google.maps.event.removeListener(this.eventListeners[i])\n      }\n      this.eventListeners = null\n    }\n\n    if (this.moveListener) {\n      google.maps.event.removeListener(this.moveListener)\n      this.moveListener = null\n    }\n\n    if (this.mapListener) {\n      google.maps.event.removeListener(this.mapListener)\n      this.mapListener = null\n    }\n\n    if (this.contextListener) {\n      google.maps.event.removeListener(this.contextListener)\n      this.contextListener = null\n    }\n\n    // @ts-ignore\n    this.setMap(null)\n  }\n\n  extend(obj1: any, obj2: any): any {\n    return function applyExtend(object: any) {\n      // eslint-disable-next-line guard-for-in\n      for (const property in object.prototype) {\n        // @ts-ignore\n        if (!this.prototype.hasOwnProperty(property)) {\n          // @ts-ignore\n          this.prototype[property] = object.prototype[property]\n        }\n      }\n\n      // @ts-ignore\n      return this\n    }.apply(obj1, [obj2])\n  }\n}\n"],"names":["InfoBox","options","this","extend","google","maps","OverlayView","content","disableAutoPan","maxWidth","pixelOffset","Size","position","LatLng","zIndex","boxClass","boxStyle","closeBoxMargin","closeBoxURL","infoBoxClearance","visible","isHidden","alignBottom","pane","enableEventPropagation","div","closeListener","moveListener","mapListener","contextListener","eventListeners","fixedWidthSet","prototype","createInfoBoxDiv","_this","cancelHandler","event","cancelBubble","stopPropagation","document","createElement","setBoxStyle","innerHTML","getCloseBoxImg","appendChild","getPanes","addClickHandler","style","width","offsetWidth","bw","getBoxWidths","left","right","panBox","events","i","length","push","addDomListener","cursor","returnValue","preventDefault","trigger","img","firstChild","closeBox","getCloseClickHandler","close","disablePan","map","getMap","Map","xOffset","yOffset","bounds","getBounds","contains","setCenter","mapDiv","getDiv","mapWidth","mapHeight","offsetHeight","iwOffsetX","iwOffsetY","height","iwWidth","iwHeight","padX","padY","pixPosition","getProjection","fromLatLngToContainerPixel","x","y","panBy","className","cssText","hasOwnProperty","webkitTransform","opacity","parseFloat","msFilter","filter","visibility","overflow","top","bottom","defaultView","ownerDocument","computedStyle","getComputedStyle","parseInt","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","documentElement","currentStyle","onRemove","parentNode","removeChild","draw","fromLatLngToDivPixel","setOptions","setContent","setPosition","setZIndex","removeListener","latLng","setVisible","isVisible","index","getContent","getPosition","getZIndex","getVisible","show","hide","open","anchor","addListener","setMap","obj1","obj2","object","property","apply"],"mappings":"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"}